<UserControl x:Class="Note.View.Notes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Note"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Menu ="clr-namespace:Note.Utilities"
             xmlns:view="clr-namespace:Note.View"
             xmlns:vm="clr-namespace:Note.ViewModel" 
             xmlns:window="clr-namespace:Note.Windows"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ul="clr-namespace:Note.Utilities"
             xmlns:in="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="704" d:DesignWidth="1025"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <UserControl.Resources>
        <ul:TimeAgoConvert x:Key="TimeAgoConvert"></ul:TimeAgoConvert>
        <Style x:Key="MaterialDesignListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <Grid>
                                <Border x:Name="MouseOverBorder" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}" Opacity="0"/>
                                <Border x:Name="SelectedBorder" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}" Opacity="0"/>
                                <wpf:Ripple x:Name="Ripple" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Focusable="False" Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".56"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding (wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource Mode=Self}}" Value="False">
                                <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Collapsed"/>
                                <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                                <Setter Property="Visibility" TargetName="SelectedBorder" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="wpf:ListBoxItemAssist.ShowSelection" Value="{Binding (wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
        </Style>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignListBoxItem}"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="False" SnapsToDevicePixels="true">
                            <ScrollViewer ClipToBounds="False" Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter ClipToBounds="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="wpf:ScrollViewerAssist.IsAutoHideEnabled" Value="True"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280" MinWidth="280" MaxWidth="545"></ColumnDefinition>
            <ColumnDefinition Width="3"></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Background="#fef8e2">
            <Grid.RowDefinitions>
                <RowDefinition Height="150"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <TextBlock Style="{StaticResource Text_Style}"
                               Text="Personal"
                               Foreground="Black" HorizontalAlignment="Left" Margin="20,0,0,0"></TextBlock>
                    <Button 
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Command="{Binding TestCommand}"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Border BorderBrush="Black" BorderThickness="0,0,0,0.5" >
                        <TextBlock Style="{StaticResource Text_Style}"
                               Text="2 Notes"
                               Foreground="Black"
                               HorizontalAlignment="Left"
                               Margin="20,0,0,0"></TextBlock>
                    </Border>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">

                <StackPanel
                    Name="ListBoxNotes"
                    Height="550">
                    <!--<view:miniNote Padding="10,10" ></view:miniNote >-->
                    <ScrollViewer
                        HorizontalScrollBarVisibility="Hidden"
                        Style="{StaticResource MaterialDesignScrollViewer}"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        Height="550">
                        <ListBox 
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            Style="{StaticResource ListBoxStyle1}"
                            ItemsSource="{Binding ListNote}" 
                            SelectedItem="{Binding CurNote}"
                            Width="{Binding ActualWidth, ElementName=ListBoxNotes}"
                            Height="{Binding ActualHeight, ElementName=ListBoxNotes}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Style.Resources>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="10"/>
                                            <Setter Property="Margin" Value="10 10 0 0"/>
                                            <Setter Property="Padding" Value="0 0 0 0"/>
                                        </Style>
                                    </Style.Resources>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <view:miniNote 
                                            Padding="0 0 0 0"
                                            Margin="-3 -1 -4 -1"
                                            miniNoteTitle="{Binding Title}" 
                                            miniNoteHeadLine="{Binding HeadLine}"
                                            miniNoteDate="{Binding LastEdited}"
                                            miniNoteBtnCommand="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}},Path=DataContext.LoadPageCommand}"/>
                                            
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu x:Name="ContextMenuListNote">
                                    <ContextMenu.Style>
                                        <Style TargetType="ContextMenu">
                                            <Setter Property="Height" Value="45"/>
                                            <Setter Property="Width" Value="230"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Foreground" Value="White"></Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ContextMenu">
                                                        <Border Background="#575757" CornerRadius="4" >
                                                            <StackPanel>
                                                                <!--<MenuItem x:Name="AddSongToPlayList" Foreground="White" Margin="5 5 5 0" Height="40" Command= "{Binding DataContext.ShowAddSongToPlaylistWindowCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" 
                                              CommandParameter="{Binding}">
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="Plus" Foreground="White"/>
                                                <TextBlock Text="Add song" FontSize="14" FontWeight="SemiBold" Margin="10 0 0 0"/>
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>-->
                                                                <MenuItem 
                                                                    x:Name="DeleteNote" 
                                                                    Foreground="White" 
                                                                    Margin="5 0 5 0" 
                                                                    Height="40"  
                                                                    Command= "{Binding DataContext.NoteToTrashCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" 
                                                                    CommandParameter="{Binding}">
                                                                    <MenuItem.Header>
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <materialDesign:PackIcon Kind="DeleteOutline" Foreground="White"/>
                                                                            <TextBlock Text="Remove note" FontSize="14" FontWeight="SemiBold" Margin="10 0 0 0"/>
                                                                        </StackPanel>
                                                                    </MenuItem.Header>
                                                                </MenuItem>
                                                                
                                                            </StackPanel>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ContextMenu.Style>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </ScrollViewer>
                </StackPanel>
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Panel.ZIndex="0"></GridSplitter>
        <Grid Grid.Column="2" Background="#ffffff">
            <Grid Background="#ffffff">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30.9"/>
                    <RowDefinition Height="119.1"/>
                    <RowDefinition Height="539*"/>
                    <RowDefinition Height="15*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.RowSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <TextBox 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Text="{Binding PageTitle, Mode=TwoWay}"
                            FontSize="32"
                            KeyUp="TextBox_KeyEnterUpdate">
                        </TextBox>
                    </Grid>
                    <Grid Grid.Row="1">
                        <ToolBarTray>
                            <ToolBar 
                                ClipToBounds="False"
                                Style="{StaticResource MaterialDesignToolBar}"
                                VerticalAlignment="Top" 
                                Margin="0,10,0,0">
                                <Button
                                    Content="{materialDesign:PackIcon Kind=ContentSave}"
                                    ToolTip="Save" 
                                    Command="{Binding SavePageCommand}"/>
                                <Separator />
                                <Button
                                    Command="Cut"
                                    Content="{materialDesign:PackIcon Kind=ContentCut}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Cut" />
                                <Button
                                    Command="Copy"
                                    Content="{materialDesign:PackIcon Kind=ContentCopy}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Copy that stuff" />
                                <Separator />
                                <Button
                                    Command="Paste"
                                    Content="{materialDesign:PackIcon Kind=ContentPaste}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Paste some stuff" />
                                <!--
                                    when badging in a toolbar, make sure the parent ToolBar.ClipToBounds="False", and
                                    manually apply the button style
                                -->
                                <Separator />
                                <ListBox
                                    SelectedIndex="0">
                                    <ListBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock
                                                Text="MaterialDesignToolToggleFlatListBox" />
                                            <TextBlock
                                                Text="Exclusive selection" />
                                            <TextBlock
                                                Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                                        </StackPanel>
                                    </ListBox.ToolTip>
                                    <ListBoxItem Name="LeftAlign" Content="{materialDesign:PackIcon Kind=FormatAlignLeft}" Selected="AlignLeft" Unselected="UnselectedAlign" />
                                    <ListBoxItem Name="CenterAlign" Content="{materialDesign:PackIcon Kind=FormatAlignCenter}"  Selected="AlignCenter" Unselected="UnselectedAlign"/>
                                    <ListBoxItem Name="RightAlign" Content="{materialDesign:PackIcon Kind=FormatAlignRight}" Selected="AlignRight" Unselected="UnselectedAlign" />
                                    <ListBoxItem Name="JustifyAlign" Content="{materialDesign:PackIcon Kind=FormatAlignJustify}" Selected="AlignJustify" Unselected="UnselectedAlign" />
                                </ListBox>
                                <Separator />
                                <ListBox SelectionMode="Extended">
                                    <ListBox.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="MaterialDesignToolToggleListBox" />
                                            <TextBlock Text="Multiple selection" />
                                            <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                                        </StackPanel>
                                    </ListBox.ToolTip>
                                    <ListBoxItem Name="Boldbutton" Content="{materialDesign:PackIcon Kind=FormatBold}" Selected="Bold" Unselected="UnBold"/>
                                    <ListBoxItem Name="Italicbutton" Content="{materialDesign:PackIcon Kind=FormatItalic}" Selected="Italic" Unselected="UnItalic"  />
                                    <ListBoxItem Name="Underlinebutton" Content="{materialDesign:PackIcon Kind=FormatUnderline}" Selected="UnderLine" Unselected="UnUnderLine"/>
                                </ListBox>
                                <Separator />
                                <Label
                                    VerticalAlignment="Center"
                                    Content="Font size:" />
                                <ComboBox>
                                    <ComboBoxItem Content="10" />
                                    <ComboBoxItem
                                        Content="12"
                                        IsSelected="True"/>
                                    <ComboBoxItem Content="14" />
                                    <ComboBoxItem Content="16" />
                                </ComboBox>
                                <Separator/>
                                <Button
                                    Click="InsertImageButton_Click"
                                    Command=""
                                    Content="{materialDesign:PackIcon Kind=Image}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Add Image"
                                    
                                    />
                                <Button
                                    Click="btnAddBulletList_Click"
                                    Content="{materialDesign:PackIcon Kind=FormatListBulleted}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Bulletlist" />
                                <Button 
                                    Content="{materialDesign:PackIcon Kind=Table}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Add table"
                                    Click="InsertTable"
                                    />
                                <Button 
                                     Content="{materialDesign:PackIcon Kind=TableRemove}"
                                     ToolBar.OverflowMode="AsNeeded"
                                     ToolTip="Remove table"
                                     Click="RemoveTable"
    />
                                <Button  Click="TextColor_Click"
                                    Content="{materialDesign:PackIcon Kind=FormatColorText}"
                                    ToolBar.OverflowMode="AsNeeded"
                                    ToolTip="Text Color" />
                            </ToolBar>
                        </ToolBarTray>
                    </Grid>
                </Grid>
                <RichTextBox 
                    x:Name="richTextBox" 
                    SelectionChanged="TextBox_SelectionChanged"
                    Grid.Row="2" 
                    Grid.ColumnSpan="2"
                    Loaded="richTextBox_Loaded"
                    TextChanged="TextBox_TextChanged">
                    <FlowDocument Name="myFlowDocument">
                    </FlowDocument>
                    <in:Interaction.Triggers>
                        <in:EventTrigger EventName="TextChanged">
                            <in:InvokeCommandAction Command="{Binding WordCountCommand}"/>
                        </in:EventTrigger>
                    </in:Interaction.Triggers>
                </RichTextBox>
            </Grid>
            <StatusBar VerticalAlignment="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <!-- Status information on the left -->
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Word Count: " Margin="10 0 0 0"/>
                        <TextBlock Text="{Binding WordCount}"/>
                    </StackPanel>
                </StatusBarItem>
                <!-- Center space (adjust as needed) -->
                <StatusBarItem>
                    <!-- You can leave this empty or add something here if needed -->
                </StatusBarItem>

                <!-- Additional controls on the right -->
                <StatusBarItem Grid.Column="2" Margin="0 0 0 0">
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <!--<TextBlock Text="Last Modified: "></TextBlock>-->
                        <TextBlock Text="{Binding CurNote.LastEdited, Converter={StaticResource TimeAgoConvert}, StringFormat='Last Modified: {0:G}'}"></TextBlock>

                    </StackPanel>
                </StatusBarItem>



            </StatusBar>
        </Grid>
    </Grid>
</UserControl>
 