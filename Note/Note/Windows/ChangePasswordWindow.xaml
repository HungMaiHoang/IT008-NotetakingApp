<Window x:Class="Note.Windows.ChangePasswordWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:local="clr-namespace:Note"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
         xmlns:vm="clr-namespace:Note.ViewModel"
         xmlns:Menu="clr-namespace:Note.Utilities"
        xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
         mc:Ignorable="d"
        Title="RenameWindow" Height="300" Width="400"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        AllowsTransparency="True">
    <Window.Resources>

        <Style x:Key="MaterialDesignRaisedButton" TargetType="{x:Type ButtonBase}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4,16,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (wpf:ShadowAssist.CacheMode), RelativeSource={RelativeSource Mode=Self}}">
                                <Grid>
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}" Effect="{Binding (wpf:ElevationAssist.Elevation)}"/>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{Binding (wpf:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{Binding (wpf:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (wpf:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource Mode=TemplatedParent}}" Maximum="{Binding (wpf:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Minimum="{Binding (wpf:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource Mode=TemplatedParent}}" Opacity="{Binding (wpf:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (wpf:ButtonProgressAssist.Value), RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" Visibility="{Binding (wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, Mode=FindAncestor}}">
                                        <ProgressBar.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding ElementName="border" Path="ActualWidth"/>
                                                <Binding ElementName="border" Path="ActualHeight"/>
                                                <Binding ElementName="border" Path="CornerRadius"/>
                                                <Binding ElementName="border" Path="BorderThickness"/>
                                            </MultiBinding>
                                        </ProgressBar.Clip>
                                    </ProgressBar>
                                </Grid>
                            </AdornerDecorator>
                            <wpf:Ripple ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth"/>
                                        <Binding ElementName="border" Path="ActualHeight"/>
                                        <Binding ElementName="border" Path="CornerRadius"/>
                                        <Binding ElementName="border" Path="BorderThickness"/>
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                            </wpf:Ripple>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="wpf:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="wpf:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.38"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="TextBlock.FontSize" Value="14"/>
            <Setter Property="TextBlock.FontWeight" Value="Medium"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="wpf:ButtonAssist.CornerRadius" Value="2"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="wpf:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="wpf:ButtonProgressAssist.Opacity" Value=".4"/>
            <Setter Property="wpf:ElevationAssist.Elevation" Value="Dp2"/>
            <Setter Property="wpf:RippleAssist.Feedback" Value="White"/>
        </Style>
        <Style x:Key="ButtonStyle1" BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        </Style>
    </Window.Resources>
    <materialDesign:Card UniformCornerRadius="25" Background="#fef8e2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" ></RowDefinition>
                <RowDefinition Height="4*"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" 
                       Text="Change Password"
                       FontFamily="Montserrat"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontWeight="Medium"
                       FontSize="36"></TextBlock>
            <StackPanel  Grid.Row="1" Margin="20 0 20 0">
                
            <TextBlock  Text="Current Password" Grid.Row="1"
            Foreground="Black"
            FontSize="12"
            FontWeight="Medium"
            FontFamily="Monserrat"
            Margin="0 15 0 0"></TextBlock>

            <PasswordBox x:Name="txtPassword"
                         Grid.Row="1"
                         
             FontSize="13"
             FontWeight="Medium"
             FontFamily="Montserrat"
             Foreground="Black"
             CaretBrush="LightGray"
             BorderBrush="DarkGray"
             BorderThickness="0 0 0 1"
             Height="28"
             VerticalContentAlignment="Center"
             Margin=" 0 5 0 0"
             Padding="20 0 0 0"
             VerticalAlignment="Center"
             PasswordChanged="txtPassword_PasswordChanged">
                <PasswordBox.Background>
                    <ImageBrush ImageSource="/Images/key.png"
                    Stretch="None"
                    AlignmentX="Left"/>
                </PasswordBox.Background>
            </PasswordBox>
                <TextBlock  Text="New Password" Grid.Row="1"
                     Foreground="Black"
                     FontSize="12"
                     FontWeight="Medium"
                     FontFamily="Monserrat"
                     Margin="0 15 0 0"></TextBlock>

                <PasswordBox x:Name="txtNewPassword"
              Grid.Row="1"
                      FontSize="13"
                      FontWeight="Medium"
                      FontFamily="Montserrat"
                      Foreground="Black"
                      CaretBrush="LightGray"
                      BorderBrush="DarkGray"
                      BorderThickness="0 0 0 1"
                      Height="28"
                      VerticalContentAlignment="Center"
                      Margin=" 0 5 0 0"
                      Padding="20 0 0 0"
                      VerticalAlignment="Center"
                      PasswordChanged="txtNewPassword_PasswordChanged">
                    <PasswordBox.Background>
                        <ImageBrush ImageSource="/Images/key.png"
                             Stretch="None"
                             AlignmentX="Left"/>
                    </PasswordBox.Background>
                </PasswordBox>
                <TextBlock  Text="Confirm Password" Grid.Row="1"
                     Foreground="Black"
                     FontSize="12"
                     FontWeight="Medium"
                     FontFamily="Monserrat"
                     Margin="0 15 0 0"></TextBlock>

                <PasswordBox x:Name="txtConfirmPassword"
              Grid.Row="1"
              FontSize="13"
              FontWeight="Medium"
              FontFamily="Montserrat"
              Foreground="Black"
              CaretBrush="LightGray"
              BorderBrush="DarkGray"
              BorderThickness="0 0 0 1"
              Height="28"
              VerticalContentAlignment="Center"
              Margin=" 0 5 0 0"
              Padding="20 0 0 0"
              VerticalAlignment="Center"
              PasswordChanged="txtConfirmPassword_PasswordChanged">
                    <PasswordBox.Background>
                        <ImageBrush ImageSource="/Images/key.png"
                             Stretch="None"
                             AlignmentX="Left"/>
                    </PasswordBox.Background>
                </PasswordBox>
            </StackPanel>
            <Button
                Grid.Row="2"
        Margin=" 0 0 0 0"
        Width="150"
        Height="40"
        materialDesign:ButtonAssist.CornerRadius="20"
        IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
        Style="{StaticResource ButtonStyle1}"
        Command="{Binding ChangePasswordCommand}"
        >
                <TextBlock
             Text="Save" />
            </Button>
        </Grid>
    </materialDesign:Card>
</Window>
